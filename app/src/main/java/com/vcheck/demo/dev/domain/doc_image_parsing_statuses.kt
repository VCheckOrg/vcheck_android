package com.vcheck.demo.dev.domain

object DocImageParsingStatuses {

    val statusesMap: Map<Int, String> = mapOf(
        0 to "SUCCESS", //успешная загрузка либо парсинг
        1 to "IMAGE_NOT_FOUND", //внутренняя ошибка, фронт может её считать как неожиданную и просить пользователя загрузить документ еще раз
        2 to "NORMALIZATION_ERROR", //при парсинге мы не смогли выровнять фотографию, фронт может её считать как неверный тип документа
        3 to "DOCUMENT_NOT_FOUND", //при парсинге мы не нашли документ на фотографии, фронт может её считать как неверный тип документа
        4 to "INVALID_DOCUMENT_TYPE", //при парсинге мы опеределили неверный тип документа
        5 to "INVALID_PARSER", //внутренняя ошибка, фронт может её считать как неожиданную и просить пользователя загрузить документ еще раз
        6 to "INVALID_DOCUMENT_ID", //внутренняя ошибка, фронт может её считать как неожиданную и просить пользователя загрузить документ еще раз
        7 to "INVALID_DOCUMENT_STATUS", //внутренняя ошибка, фронт может её считать как неожиданную и просить пользователя загрузить документ еще раз
        8 to "PAGES_NOT_MATCH", //при парсинге мы опеределили, что страницы не принадлежат к одному документу
        9 to "ANOMALY_DETECTED", //при детекте на подгруженном фото документа бликов, галограм, сторонних предметов на фото и данных
        100 to "UNEXPECTED_ERROR" //что-то пошло не так при парсинге, просим пользователя загрузить еще раз
    )
}